financials:
  # -- cron schedule
  cronSchedule: "0 */4 * * *"
  image:
    # -- Respository of the image.
    repository: ghcr.io/ashwinath/financials
    # -- Image pull policy in Kubernetes
    pullPolicy: Always
    # -- Override this value for the desired image tag
    tag: latest

  # -- Resources requests and limits for the financial app
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  migrate:
    image:
      # -- migrate/migrate image tag for db migrations
      tag: v4.15.0

  financialsGrafana:
    image:
      # -- Respository of the image.
      repository: ghcr.io/ashwinath/financials-grafana
      # -- Image pull policy in Kubernetes
      pullPolicy: Always
      # -- Override this value for the desired image tag
      tag: latest
    apiKey: secret
    # -- URL and port of the grafana site
    endpoint: www.example.com:3000


  # -- folder containing the csv files
  tradeCSVDirectory: /etc/trades

  # -- CSV values for the trades
  trades: |-
    date_purchased,symbol,trade_type,price_each,quantity
    2021-03-11,IWDA.LON,buy,76.34,10

  # -- folder containing the expenses directories
  expensesCSVDirectory: /etc/expenses

  # -- CSV values for the expenses
  expenses: |-
    date,type,amount
    2020-03-31,Credit Card,500
    2020-03-31,Reimbursement,-200
    2020-03-31,Tithe,800

  # -- folder containing the assets directories
  assetsCSVDirectory: /etc/assets

  # -- CSV values for the assets
  assets: |-
    date,type,amount
    2020-03-31,CPF,1000
    2020-03-31,Bank,20000
    2020-03-31,Mortgage,-40000
    2020-03-31,Investments,20000

  # -- folder containing the income directories
  incomeCSVDirectory: /etc/income

  # -- CSV values for the income
  income: |-
    date,type,amount
    2021-03-11,Base,500
    2021-03-11,Bonus,200

  # -- Config for financials api, see api/config.yaml
  config:
    Database:
      # TODO: Allow dynamic host
      Host: <release name>-postgresql.<namespace>.svc.cluster.local
      Port: 5432
      User: postgres
      Password: password
      Name: postgres
      TimeZone: Asia/Singapore
      BatchInsertSize: 100

    AlphaVantageAPIKey: test
    TradesCSVFile: /etc/trades/trades.csv
    ExpensesCSVFile: /etc/expenses/expenses.csv

postgresql:
  # -- Resources requests and limits for the database
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  persistence:
    # -- Persist Postgresql data in a Persistent Volume Claim 
    enabled: true
  # -- Database name for Turing Postgresql database
  postgresqlDatabase: postgres
  # -- Username for postgresql database
  postgresqlUsername: postgres
  # -- Password for postgresql database, highly recommended to change this value
  postgresqlPassword: password
